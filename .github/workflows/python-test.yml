name: Python CI/CD Pipeline with Enhanced Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
    
    - name: Create logs directory
      run: mkdir -p logs
    
    - name: Run Enhanced Test Audit
      run: |
        echo "🚀 运行增强版测试审计系统..."
        python audit_tests.py
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          logs/result.log
          audit_report.json
          pytest_report.html
          pytest_report.json
          coverage.xml
          htmlcov/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit security scan
      run: bandit -r . -f json -o bandit-report.json || true
    
    - name: Run Safety check
      run: safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy
    
    - name: Run Black
      run: black --check . || echo "Black formatting issues found"
    
    - name: Run isort
      run: isort --check-only . || echo "Import sorting issues found"
    
    - name: Run flake8
      run: flake8 . || echo "Flake8 issues found"
    
    - name: Run mypy
      run: mypy . --ignore-missing-imports || echo "MyPy type checking issues found"

  audit-summary:
    runs-on: ubuntu-latest
    needs: [test, security-scan, lint]
    if: always()
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Generate CI Summary
      run: |
        echo "# 🔍 CI/CD 执行摘要" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📊 测试结果" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "test-results-3.11/audit_report.json" ]; then
          echo "✅ 找到审计报告" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          head -20 test-results-3.11/audit_report.json >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ 未找到审计报告" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🔒 安全扫描" >> $GITHUB_STEP_SUMMARY
        if [ -f "security-reports/bandit-report.json" ]; then
          echo "✅ Bandit 安全扫描完成" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -f "security-reports/safety-report.json" ]; then
          echo "✅ Safety 依赖检查完成" >> $GITHUB_STEP_SUMMARY
        fi