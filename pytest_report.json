{"created": 1759143702.091876, "duration": 3.872323989868164, "exitcode": 2, "root": "/Users/a606/cloud_function_source", "environment": {}, "summary": {"total": 0, "collected": 187}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "CHANGESETS/BACKUPS/api_cleanup", "outcome": "passed", "result": []}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/config", "outcome": "passed", "result": []}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/python", "outcome": "passed", "result": []}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_data_sync.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_data_sync.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nCHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_data_sync.py:13: in <module>\n    from integrated_data_adapter import IntegratedDataAdapter\nCHANGESETS/BACKUPS/final_cleanup_20250929_162103/python/integrated_data_adapter.py:13: in <module>\n    from bigquery_data_adapter import BQ\nE   ModuleNotFoundError: No module named 'bigquery_data_adapter'"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_e2e.py", "outcome": "skipped", "result": [], "longrepr": "('/Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_e2e.py', 39, \"Skipped: E2E\u6d4b\u8bd5\u6a21\u5757\u5bfc\u5165\u5931\u8d25: No module named 'monitoring_dashboard'\")"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_e2e_system.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module '/Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_e2e_system.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nCHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_e2e_system.py:16: in <module>\n    from integrated_data_adapter import IntegratedDataAdapter\nCHANGESETS/BACKUPS/final_cleanup_20250929_162103/python/integrated_data_adapter.py:13: in <module>\n    from bigquery_data_adapter import BQ\nE   ModuleNotFoundError: No module named 'bigquery_data_adapter'"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_redundant_field_detection", "type": "Function", "lineno": 74}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_unused_field_identification", "type": "Function", "lineno": 87}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_field_mapping_consistency", "type": "Function", "lineno": 104}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_data_type_conversion_logic", "type": "Function", "lineno": 118}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_field_usage_rate_calculation", "type": "Function", "lineno": 142}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_efficiency_issue_detection", "type": "Function", "lineno": 162}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_threading_analysis", "type": "Function", "lineno": 180}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_optimization_recommendations", "type": "Function", "lineno": 195}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer::test_complete_analysis_integration", "type": "Function", "lineno": 216}]}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageLogicErrors", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageLogicErrors::test_field_mapping_errors", "type": "Function", "lineno": 249}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageLogicErrors::test_data_structure_inconsistency", "type": "Function", "lineno": 264}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageLogicErrors::test_redundant_field_logic", "type": "Function", "lineno": 276}]}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestDataQualityValidation", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestDataQualityValidation::test_field_type_validation", "type": "Function", "lineno": 298}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestDataQualityValidation::test_timestamp_parsing", "type": "Function", "lineno": 310}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestDataQualityValidation::test_data_completeness", "type": "Function", "lineno": 325}]}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageAnalyzer", "type": "Class"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestFieldUsageLogicErrors", "type": "Class"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py::TestDataQualityValidation", "type": "Class"}]}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_ops_system.py", "outcome": "passed", "result": []}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/config", "type": "Dir"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/python", "type": "Dir"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_data_sync.py", "type": "Module"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_e2e.py", "type": "Module"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_e2e_system.py", "type": "Module"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py", "type": "Module"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_ops_system.py", "type": "Module"}]}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/config", "outcome": "passed", "result": []}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_data_sync.py", "outcome": "failed", "result": [], "longrepr": "../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/ast.py:50: in parse\n    return compile(source, filename, mode, flags,\nE     File \"/Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_data_sync.py\", line 36\nE       )\nE       ^\nE   SyntaxError: unmatched ')'"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_e2e.py", "outcome": "failed", "result": [], "longrepr": "../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/ast.py:50: in parse\n    return compile(source, filename, mode, flags,\nE     File \"/Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_e2e.py\", line 150\nE       \"bigquery\": {\nE   IndentationError: unexpected indent"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_e2e_system.py", "outcome": "failed", "result": [], "longrepr": "../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/ast.py:50: in parse\n    return compile(source, filename, mode, flags,\nE     File \"/Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_e2e_system.py\", line 35\nE       )\nE       ^\nE   SyntaxError: unmatched ')'"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_field_usage_analysis.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_field_usage_analysis' has this __file__ attribute:\n  /Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py\nwhich is not the same as the test file we want to collect:\n  /Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_field_usage_analysis.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_ops_system.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_ops_system' has this __file__ attribute:\n  /Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_ops_system.py\nwhich is not the same as the test file we want to collect:\n  /Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_ops_system.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/config", "type": "Dir"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_data_sync.py", "type": "Module"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_e2e.py", "type": "Module"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_e2e_system.py", "type": "Module"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_field_usage_analysis.py", "type": "Module"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012/test_ops_system.py", "type": "Module"}]}, {"nodeid": "CHANGESETS/BACKUPS", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/BACKUPS/api_cleanup", "type": "Dir"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_162103", "type": "Dir"}, {"nodeid": "CHANGESETS/BACKUPS/final_cleanup_20250929_170012", "type": "Dir"}]}, {"nodeid": "CHANGESETS/DOCS", "outcome": "passed", "result": []}, {"nodeid": "CHANGESETS/receipts/CompleteSolution", "outcome": "passed", "result": []}, {"nodeid": "CHANGESETS/receipts", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/receipts/CompleteSolution", "type": "Dir"}]}, {"nodeid": "CHANGESETS/tools", "outcome": "passed", "result": []}, {"nodeid": "CHANGESETS", "outcome": "passed", "result": [{"nodeid": "CHANGESETS/BACKUPS", "type": "Dir"}, {"nodeid": "CHANGESETS/DOCS", "type": "Dir"}, {"nodeid": "CHANGESETS/receipts", "type": "Dir"}, {"nodeid": "CHANGESETS/tools", "type": "Dir"}]}, {"nodeid": "backups", "outcome": "passed", "result": []}, {"nodeid": "bin", "outcome": "passed", "result": []}, {"nodeid": "cache", "outcome": "passed", "result": []}, {"nodeid": "config", "outcome": "passed", "result": []}, {"nodeid": "contract_keys", "outcome": "passed", "result": []}, {"nodeid": "data", "outcome": "passed", "result": []}, {"nodeid": "field_archives", "outcome": "passed", "result": []}, {"nodeid": "htmlcov", "outcome": "passed", "result": []}, {"nodeid": "htmlcov_final", "outcome": "passed", "result": []}, {"nodeid": "local_data", "outcome": "passed", "result": []}, {"nodeid": "local_system/local_system", "outcome": "passed", "result": []}, {"nodeid": "local_system/logs", "outcome": "passed", "result": []}, {"nodeid": "local_system/test_system.py", "outcome": "passed", "result": [{"nodeid": "local_system/test_system.py::test_database", "type": "Function", "lineno": 23}, {"nodeid": "local_system/test_system.py::test_api_collector", "type": "Function", "lineno": 61}, {"nodeid": "local_system/test_system.py::test_sql_engine", "type": "Function", "lineno": 82}, {"nodeid": "local_system/test_system.py::test_auto_repair", "type": "Function", "lineno": 105}, {"nodeid": "local_system/test_system.py::test_monitoring", "type": "Function", "lineno": 128}]}, {"nodeid": "local_system", "outcome": "passed", "result": [{"nodeid": "local_system/local_system", "type": "Dir"}, {"nodeid": "local_system/logs", "type": "Dir"}, {"nodeid": "local_system/test_system.py", "type": "Module"}]}, {"nodeid": "logs", "outcome": "passed", "result": []}, {"nodeid": "monitoring", "outcome": "passed", "result": []}, {"nodeid": "optimization_backups/20250929_055844", "outcome": "passed", "result": []}, {"nodeid": "optimization_backups", "outcome": "passed", "result": [{"nodeid": "optimization_backups/20250929_055844", "type": "Dir"}]}, {"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py::TestBettingLogic", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py::TestBettingLogic::test_bet_amount_limits", "type": "TestCaseFunction", "lineno": 33}, {"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py::TestBettingLogic::test_bet_odds_calculation", "type": "TestCaseFunction", "lineno": 82}, {"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py::TestBettingLogic::test_bet_period_validation", "type": "TestCaseFunction", "lineno": 71}, {"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py::TestBettingLogic::test_bet_placement_validation", "type": "TestCaseFunction", "lineno": 19}, {"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py::TestBettingLogic::test_bet_type_validation", "type": "TestCaseFunction", "lineno": 47}, {"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py::TestBettingLogic::test_user_balance_check", "type": "TestCaseFunction", "lineno": 57}]}, {"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py::TestBettingLogic", "type": "UnitTestCase"}]}, {"nodeid": "pc28_business_logic_tests/betting_logic", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/betting_logic/test_betting_logic.py", "type": "Module"}]}, {"nodeid": "pc28_business_logic_tests/calculation_formulas", "outcome": "passed", "result": []}, {"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py::TestDataProcessing", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py::TestDataProcessing::test_data_aggregation", "type": "TestCaseFunction", "lineno": 53}, {"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py::TestDataProcessing::test_data_cleaning", "type": "TestCaseFunction", "lineno": 67}, {"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py::TestDataProcessing::test_data_export", "type": "TestCaseFunction", "lineno": 82}, {"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py::TestDataProcessing::test_data_transformation", "type": "TestCaseFunction", "lineno": 39}, {"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py::TestDataProcessing::test_data_validation", "type": "TestCaseFunction", "lineno": 19}, {"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py::TestDataProcessing::test_real_time_processing", "type": "TestCaseFunction", "lineno": 97}]}, {"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py::TestDataProcessing", "type": "UnitTestCase"}]}, {"nodeid": "pc28_business_logic_tests/data_processing", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/data_processing/test_data_processing.py", "type": "Module"}]}, {"nodeid": "pc28_business_logic_tests/integration_logic", "outcome": "passed", "result": []}, {"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py::TestLotteryLogic", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py::TestLotteryLogic::test_lottery_draw_generation", "type": "TestCaseFunction", "lineno": 18}, {"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py::TestLotteryLogic::test_lottery_draw_timing", "type": "TestCaseFunction", "lineno": 46}, {"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py::TestLotteryLogic::test_lottery_draw_validation", "type": "TestCaseFunction", "lineno": 30}, {"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py::TestLotteryLogic::test_lottery_period_management", "type": "TestCaseFunction", "lineno": 38}, {"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py::TestLotteryLogic::test_lottery_result_calculation", "type": "TestCaseFunction", "lineno": 58}]}, {"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py::TestLotteryLogic", "type": "UnitTestCase"}]}, {"nodeid": "pc28_business_logic_tests/lottery_logic", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/lottery_logic/test_lottery_logic.py", "type": "Module"}]}, {"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py::TestPayoutLogic", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py::TestPayoutLogic::test_balance_update", "type": "TestCaseFunction", "lineno": 41}, {"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py::TestPayoutLogic::test_payout_limits", "type": "TestCaseFunction", "lineno": 50}, {"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py::TestPayoutLogic::test_payout_processing", "type": "TestCaseFunction", "lineno": 28}, {"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py::TestPayoutLogic::test_payout_record_creation", "type": "TestCaseFunction", "lineno": 72}, {"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py::TestPayoutLogic::test_payout_tax_calculation", "type": "TestCaseFunction", "lineno": 60}, {"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py::TestPayoutLogic::test_winning_calculation", "type": "TestCaseFunction", "lineno": 19}]}, {"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py::TestPayoutLogic", "type": "UnitTestCase"}]}, {"nodeid": "pc28_business_logic_tests/payout_logic", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/payout_logic/test_payout_logic.py", "type": "Module"}]}, {"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py::TestRiskManagement", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py::TestRiskManagement::test_account_security_check", "type": "TestCaseFunction", "lineno": 54}, {"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py::TestRiskManagement::test_auto_risk_response", "type": "TestCaseFunction", "lineno": 100}, {"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py::TestRiskManagement::test_betting_pattern_analysis", "type": "TestCaseFunction", "lineno": 74}, {"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py::TestRiskManagement::test_platform_risk_limits", "type": "TestCaseFunction", "lineno": 87}, {"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py::TestRiskManagement::test_suspicious_activity_detection", "type": "TestCaseFunction", "lineno": 34}, {"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py::TestRiskManagement::test_user_betting_limit", "type": "TestCaseFunction", "lineno": 20}]}, {"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py::TestRiskManagement", "type": "UnitTestCase"}]}, {"nodeid": "pc28_business_logic_tests/risk_management", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/risk_management/test_risk_management.py", "type": "Module"}]}, {"nodeid": "pc28_business_logic_tests/validation_rules", "outcome": "passed", "result": []}, {"nodeid": "pc28_business_logic_tests/workflow_logic", "outcome": "passed", "result": []}, {"nodeid": "pc28_business_logic_tests", "outcome": "passed", "result": [{"nodeid": "pc28_business_logic_tests/betting_logic", "type": "Package"}, {"nodeid": "pc28_business_logic_tests/calculation_formulas", "type": "Package"}, {"nodeid": "pc28_business_logic_tests/data_processing", "type": "Package"}, {"nodeid": "pc28_business_logic_tests/integration_logic", "type": "Package"}, {"nodeid": "pc28_business_logic_tests/lottery_logic", "type": "Package"}, {"nodeid": "pc28_business_logic_tests/payout_logic", "type": "Package"}, {"nodeid": "pc28_business_logic_tests/risk_management", "type": "Package"}, {"nodeid": "pc28_business_logic_tests/validation_rules", "type": "Package"}, {"nodeid": "pc28_business_logic_tests/workflow_logic", "type": "Package"}]}, {"nodeid": "pc28_comprehensive_business_test.py", "outcome": "passed", "result": []}, {"nodeid": "performance_comparison_test.py", "outcome": "passed", "result": []}, {"nodeid": "production_data", "outcome": "passed", "result": []}, {"nodeid": "production_logs", "outcome": "passed", "result": []}, {"nodeid": "pytest_execution_reports/2025-09-29", "outcome": "passed", "result": []}, {"nodeid": "pytest_execution_reports/archive", "outcome": "passed", "result": []}, {"nodeid": "pytest_execution_reports", "outcome": "passed", "result": [{"nodeid": "pytest_execution_reports/2025-09-29", "type": "Dir"}, {"nodeid": "pytest_execution_reports/archive", "type": "Dir"}]}, {"nodeid": "python/backups", "outcome": "passed", "result": []}, {"nodeid": "python/cache", "outcome": "passed", "result": []}, {"nodeid": "python/data", "outcome": "passed", "result": []}, {"nodeid": "python/logs", "outcome": "passed", "result": []}, {"nodeid": "python/test_api_integration.py", "outcome": "passed", "result": [{"nodeid": "python/test_api_integration.py::test_md5_signature", "type": "Function", "lineno": 44}, {"nodeid": "python/test_api_integration.py::test_api_connectivity", "type": "Function", "lineno": 54}, {"nodeid": "python/test_api_integration.py::test_realtime_data_fetch", "type": "Function", "lineno": 100}, {"nodeid": "python/test_api_integration.py::test_history_data_fetch", "type": "Function", "lineno": 137}, {"nodeid": "python/test_api_integration.py::test_integrated_adapter", "type": "Function", "lineno": 170}]}, {"nodeid": "python/test_progress_tracking.py", "outcome": "passed", "result": []}, {"nodeid": "python", "outcome": "passed", "result": [{"nodeid": "python/backups", "type": "Dir"}, {"nodeid": "python/cache", "type": "Dir"}, {"nodeid": "python/data", "type": "Dir"}, {"nodeid": "python/logs", "type": "Dir"}, {"nodeid": "python/test_api_integration.py", "type": "Module"}, {"nodeid": "python/test_progress_tracking.py", "type": "Module"}]}, {"nodeid": "receipts/Fix", "outcome": "passed", "result": []}, {"nodeid": "receipts", "outcome": "passed", "result": [{"nodeid": "receipts/Fix", "type": "Dir"}]}, {"nodeid": "reports", "outcome": "passed", "result": []}, {"nodeid": "rollback", "outcome": "passed", "result": []}, {"nodeid": "simple_supabase_test.py", "outcome": "passed", "result": []}, {"nodeid": "sql", "outcome": "passed", "result": []}, {"nodeid": "static", "outcome": "passed", "result": []}, {"nodeid": "supabase/migrations", "outcome": "passed", "result": []}, {"nodeid": "supabase", "outcome": "passed", "result": [{"nodeid": "supabase/migrations", "type": "Dir"}]}, {"nodeid": "sync_reports/task_20250929_085215_sync_push_complete", "outcome": "passed", "result": []}, {"nodeid": "sync_reports/task_20250929_090414_data_verification", "outcome": "passed", "result": []}, {"nodeid": "sync_reports/task_20250929_090502_data_verification_final", "outcome": "passed", "result": []}, {"nodeid": "sync_reports/task_20250929_091335_gcp_status_check", "outcome": "passed", "result": []}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_evidence/coverage_html", "outcome": "passed", "result": []}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_evidence", "outcome": "passed", "result": [{"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_evidence/coverage_html", "type": "Dir"}]}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer", "outcome": "passed", "result": [{"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer::test_optimizer_initialization", "type": "Function", "lineno": 80}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer::test_polling_mode_adjustment", "type": "Function", "lineno": 88}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer::test_draw_time_mode_switching", "type": "Function", "lineno": 107}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer::test_interval_calculation", "type": "Function", "lineno": 125}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer::test_cache_functionality", "type": "Function", "lineno": 149}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer::test_optimization_loop_integration", "type": "Function", "lineno": 166}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer::test_prediction_accuracy", "type": "Function", "lineno": 180}]}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestDataConsistencyOptimizer", "outcome": "passed", "result": [{"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestDataConsistencyOptimizer::test_data_record_checksum", "type": "Function", "lineno": 241}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestDataConsistencyOptimizer::test_consistency_check_identical_data", "type": "Function", "lineno": 257}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestDataConsistencyOptimizer::test_consistency_check_missing_data", "type": "Function", "lineno": 284}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestDataConsistencyOptimizer::test_consistency_check_inconsistent_data", "type": "Function", "lineno": 305}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestDataConsistencyOptimizer::test_monitoring_loop_integration", "type": "Function", "lineno": 335}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestDataConsistencyOptimizer::test_consistency_report_generation", "type": "Function", "lineno": 349}]}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestIntegrationScenarios", "outcome": "passed", "result": [{"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestIntegrationScenarios::test_full_optimization_workflow", "type": "Function", "lineno": 374}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestIntegrationScenarios::test_performance_under_load", "type": "Function", "lineno": 423}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestIntegrationScenarios::test_realtime_prediction_accuracy", "type": "Function", "lineno": 451}]}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestPerformanceBenchmarks", "outcome": "passed", "result": [{"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestPerformanceBenchmarks::test_api_call_performance", "type": "Function", "lineno": 485}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestPerformanceBenchmarks::test_consistency_check_performance", "type": "Function", "lineno": 497}]}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "outcome": "passed", "result": [{"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestSmartRealtimeOptimizer", "type": "Class"}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestDataConsistencyOptimizer", "type": "Class"}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestIntegrationScenarios", "type": "Class"}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py::TestPerformanceBenchmarks", "type": "Class"}]}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization", "outcome": "passed", "result": [{"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_evidence", "type": "Dir"}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "type": "Module"}]}, {"nodeid": "sync_reports/task_20250929_094355_complete_optimization_sync", "outcome": "passed", "result": []}, {"nodeid": "sync_reports/task_20250929_094359_complete_optimization_sync", "outcome": "passed", "result": []}, {"nodeid": "sync_reports/task_20250929_105011_complete_optimization_sync", "outcome": "passed", "result": []}, {"nodeid": "sync_reports", "outcome": "passed", "result": [{"nodeid": "sync_reports/task_20250929_085215_sync_push_complete", "type": "Dir"}, {"nodeid": "sync_reports/task_20250929_090414_data_verification", "type": "Dir"}, {"nodeid": "sync_reports/task_20250929_090502_data_verification_final", "type": "Dir"}, {"nodeid": "sync_reports/task_20250929_091335_gcp_status_check", "type": "Dir"}, {"nodeid": "sync_reports/task_20250929_092438_realtime_optimization", "type": "Dir"}, {"nodeid": "sync_reports/task_20250929_094355_complete_optimization_sync", "type": "Dir"}, {"nodeid": "sync_reports/task_20250929_094359_complete_optimization_sync", "type": "Dir"}, {"nodeid": "sync_reports/task_20250929_105011_complete_optimization_sync", "type": "Dir"}]}, {"nodeid": "test_api.py", "outcome": "passed", "result": [{"nodeid": "test_api.py::test_api_endpoint", "type": "Function", "lineno": 13}]}, {"nodeid": "test_api_compliance.py::TestAPICompliance", "outcome": "passed", "result": [{"nodeid": "test_api_compliance.py::TestAPICompliance::test_api_request_logging", "type": "Function", "lineno": 42}, {"nodeid": "test_api_compliance.py::TestAPICompliance::test_api_response_compliance", "type": "Function", "lineno": 118}, {"nodeid": "test_api_compliance.py::TestAPICompliance::test_api_security_compliance", "type": "Function", "lineno": 171}]}, {"nodeid": "test_api_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_api_compliance.py::TestAPICompliance", "type": "Class"}]}, {"nodeid": "test_api_connection.py", "outcome": "passed", "result": [{"nodeid": "test_api_connection.py::test_api_connection", "type": "Function", "lineno": 15}]}, {"nodeid": "test_bigquery_full_repair.py", "outcome": "passed", "result": []}, {"nodeid": "test_data_quality_system.py", "outcome": "skipped", "result": [], "longrepr": "('/Users/a606/cloud_function_source/test_data_quality_system.py', 24, \"Skipped: \u6570\u636e\u8d28\u91cf\u68c0\u67e5\u6a21\u5757\u5bfc\u5165\u5931\u8d25: cannot import name 'DataQualityIssue' from 'data_quality_checker' (/Users/a606/cloud_function_source/data_quality_checker.py)\")"}, {"nodeid": "test_data_sync.py", "outcome": "failed", "result": [], "longrepr": "../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/ast.py:50: in parse\n    return compile(source, filename, mode, flags,\nE     File \"/Users/a606/cloud_function_source/test_data_sync.py\", line 34\nE       appid={}['appid'],\nE   IndentationError: unexpected indent"}, {"nodeid": "test_data_sync_compliance.py::TestDataSyncCompliance", "outcome": "passed", "result": [{"nodeid": "test_data_sync_compliance.py::TestDataSyncCompliance::test_supabase_sync_logging", "type": "Function", "lineno": 43}, {"nodeid": "test_data_sync_compliance.py::TestDataSyncCompliance::test_data_sync_audit_trail", "type": "Function", "lineno": 106}, {"nodeid": "test_data_sync_compliance.py::TestDataSyncCompliance::test_sync_operation_compliance", "type": "Function", "lineno": 160}]}, {"nodeid": "test_data_sync_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_data_sync_compliance.py::TestDataSyncCompliance", "type": "Class"}]}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance", "outcome": "passed", "result": [{"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_sync_manager_initialization", "type": "Function", "lineno": 111}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_database_connection_validation", "type": "Function", "lineno": 148}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_table_structure_compliance", "type": "Function", "lineno": 181}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_data_sync_configuration", "type": "Function", "lineno": 224}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_sync_process_simulation", "type": "Function", "lineno": 257}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_error_handling_compliance", "type": "Function", "lineno": 292}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_performance_metrics_logging", "type": "Function", "lineno": 327}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_data_integrity_validation", "type": "Function", "lineno": 356}, {"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance::test_compliance_report_generation", "type": "Function", "lineno": 395}]}, {"nodeid": "test_data_sync_system_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_data_sync_system_compliance.py::TestDataSyncSystemCompliance", "type": "Class"}]}, {"nodeid": "test_database_compliance.py::TestDatabaseCompliance", "outcome": "passed", "result": [{"nodeid": "test_database_compliance.py::TestDatabaseCompliance::test_local_database_logging", "type": "Function", "lineno": 42}, {"nodeid": "test_database_compliance.py::TestDatabaseCompliance::test_data_integrity_compliance", "type": "Function", "lineno": 118}, {"nodeid": "test_database_compliance.py::TestDatabaseCompliance::test_database_audit_trail", "type": "Function", "lineno": 171}]}, {"nodeid": "test_database_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_database_compliance.py::TestDatabaseCompliance", "type": "Class"}]}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer", "outcome": "passed", "result": [{"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_redundant_field_detection", "type": "Function", "lineno": 45}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_similar_field_detection", "type": "Function", "lineno": 55}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_type_optimization_detection", "type": "Function", "lineno": 69}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_index_need_detection", "type": "Function", "lineno": 82}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_field_optimization_analysis", "type": "Function", "lineno": 93}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_table_structure_analysis", "type": "Function", "lineno": 113}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_sql_ddl_generation", "type": "Function", "lineno": 125}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_migration_script_generation", "type": "Function", "lineno": 151}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_optimization_report_generation", "type": "Function", "lineno": 179}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_savings_calculation", "type": "Function", "lineno": 221}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_high_impact_optimization_counting", "type": "Function", "lineno": 264}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_implementation_plan_generation", "type": "Function", "lineno": 294}, {"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer::test_risk_assessment_generation", "type": "Function", "lineno": 317}]}, {"nodeid": "test_database_optimizer.py::TestTableOptimizationLogic", "outcome": "passed", "result": [{"nodeid": "test_database_optimizer.py::TestTableOptimizationLogic::test_redundant_field_logic", "type": "Function", "lineno": 345}, {"nodeid": "test_database_optimizer.py::TestTableOptimizationLogic::test_field_usage_classification", "type": "Function", "lineno": 359}, {"nodeid": "test_database_optimizer.py::TestTableOptimizationLogic::test_type_optimization_logic", "type": "Function", "lineno": 373}]}, {"nodeid": "test_database_optimizer.py::TestMigrationScriptGeneration", "outcome": "passed", "result": [{"nodeid": "test_database_optimizer.py::TestMigrationScriptGeneration::test_partition_migration_script", "type": "Function", "lineno": 402}, {"nodeid": "test_database_optimizer.py::TestMigrationScriptGeneration::test_index_migration_script", "type": "Function", "lineno": 414}, {"nodeid": "test_database_optimizer.py::TestMigrationScriptGeneration::test_field_removal_migration_script", "type": "Function", "lineno": 427}, {"nodeid": "test_database_optimizer.py::TestMigrationScriptGeneration::test_field_archive_migration_script", "type": "Function", "lineno": 438}]}, {"nodeid": "test_database_optimizer.py::TestOptimizationIntegration", "outcome": "passed", "result": [{"nodeid": "test_database_optimizer.py::TestOptimizationIntegration::test_end_to_end_optimization_flow", "type": "Function", "lineno": 454}, {"nodeid": "test_database_optimizer.py::TestOptimizationIntegration::test_optimization_validation", "type": "Function", "lineno": 501}]}, {"nodeid": "test_database_optimizer.py", "outcome": "passed", "result": [{"nodeid": "test_database_optimizer.py::TestDatabaseTableOptimizer", "type": "Class"}, {"nodeid": "test_database_optimizer.py::TestTableOptimizationLogic", "type": "Class"}, {"nodeid": "test_database_optimizer.py::TestMigrationScriptGeneration", "type": "Class"}, {"nodeid": "test_database_optimizer.py::TestOptimizationIntegration", "type": "Class"}]}, {"nodeid": "test_e2e.py", "outcome": "failed", "result": [], "longrepr": "../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/ast.py:50: in parse\n    return compile(source, filename, mode, flags,\nE     File \"/Users/a606/cloud_function_source/test_e2e.py\", line 150\nE       \"bigquery\": {\nE   IndentationError: unexpected indent"}, {"nodeid": "test_e2e_system.py", "outcome": "failed", "result": [], "longrepr": "../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/python.py:498: in importtestmodule\n    mod = import_path(\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../Documents/9999/deploy_package/venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/ast.py:50: in parse\n    return compile(source, filename, mode, flags,\nE     File \"/Users/a606/cloud_function_source/test_e2e_system.py\", line 33\nE       appid={}['appid'],\nE   IndentationError: unexpected indent"}, {"nodeid": "test_field_usage_analysis.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_field_usage_analysis' has this __file__ attribute:\n  /Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_field_usage_analysis.py\nwhich is not the same as the test file we want to collect:\n  /Users/a606/cloud_function_source/test_field_usage_analysis.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator", "outcome": "passed", "result": [{"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_migration_plan_generation", "type": "Function", "lineno": 74}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_field_removal_steps_generation", "type": "Function", "lineno": 88}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_partitioning_steps_generation", "type": "Function", "lineno": 111}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_indexing_steps_generation", "type": "Function", "lineno": 131}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_migration_steps_sorting", "type": "Function", "lineno": 144}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_duration_calculation", "type": "Function", "lineno": 178}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_risk_assessment", "type": "Function", "lineno": 208}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_rollback_plan_generation", "type": "Function", "lineno": 234}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator::test_validation_checklist_generation", "type": "Function", "lineno": 269}]}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGeneration", "outcome": "passed", "result": [{"nodeid": "test_migration_generator.py::TestMigrationScriptGeneration::test_main_migration_script_generation", "type": "Function", "lineno": 342}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGeneration::test_rollback_script_generation", "type": "Function", "lineno": 356}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGeneration::test_validation_script_generation", "type": "Function", "lineno": 366}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGeneration::test_precheck_script_generation", "type": "Function", "lineno": 376}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGeneration::test_migration_scripts_generation", "type": "Function", "lineno": 388}]}, {"nodeid": "test_migration_generator.py::TestMigrationUtilityMethods", "outcome": "passed", "result": [{"nodeid": "test_migration_generator.py::TestMigrationUtilityMethods::test_field_name_extraction", "type": "Function", "lineno": 413}, {"nodeid": "test_migration_generator.py::TestMigrationUtilityMethods::test_primary_key_fields_retrieval", "type": "Function", "lineno": 428}, {"nodeid": "test_migration_generator.py::TestMigrationUtilityMethods::test_index_fields_extraction", "type": "Function", "lineno": 441}]}, {"nodeid": "test_migration_generator.py::TestMigrationIntegration", "outcome": "passed", "result": [{"nodeid": "test_migration_generator.py::TestMigrationIntegration::test_end_to_end_migration_generation", "type": "Function", "lineno": 468}, {"nodeid": "test_migration_generator.py::TestMigrationIntegration::test_migration_plan_serialization", "type": "Function", "lineno": 510}]}, {"nodeid": "test_migration_generator.py", "outcome": "passed", "result": [{"nodeid": "test_migration_generator.py::TestMigrationScriptGenerator", "type": "Class"}, {"nodeid": "test_migration_generator.py::TestMigrationScriptGeneration", "type": "Class"}, {"nodeid": "test_migration_generator.py::TestMigrationUtilityMethods", "type": "Class"}, {"nodeid": "test_migration_generator.py::TestMigrationIntegration", "type": "Class"}]}, {"nodeid": "test_monitoring_compliance.py::TestMonitoringCompliance", "outcome": "passed", "result": [{"nodeid": "test_monitoring_compliance.py::TestMonitoringCompliance::test_system_monitoring_logging", "type": "Function", "lineno": 42}, {"nodeid": "test_monitoring_compliance.py::TestMonitoringCompliance::test_performance_monitoring_compliance", "type": "Function", "lineno": 119}, {"nodeid": "test_monitoring_compliance.py::TestMonitoringCompliance::test_monitoring_audit_trail", "type": "Function", "lineno": 172}]}, {"nodeid": "test_monitoring_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_monitoring_compliance.py::TestMonitoringCompliance", "type": "Class"}]}, {"nodeid": "test_monitoring_system.py", "outcome": "skipped", "result": [], "longrepr": "('/Users/a606/cloud_function_source/test_monitoring_system.py', 30, \"Skipped: \u76d1\u63a7\u6a21\u5757\u5bfc\u5165\u5931\u8d25: No module named 'python.health_alert_system'\")"}, {"nodeid": "test_ops_system.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_ops_system' has this __file__ attribute:\n  /Users/a606/cloud_function_source/CHANGESETS/BACKUPS/final_cleanup_20250929_162103/test_ops_system.py\nwhich is not the same as the test file we want to collect:\n  /Users/a606/cloud_function_source/test_ops_system.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "test_optimizer.py", "outcome": "passed", "result": []}, {"nodeid": "test_pc28_system.py", "outcome": "passed", "result": []}, {"nodeid": "test_performance_optimizer.py", "outcome": "passed", "result": []}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance", "outcome": "passed", "result": [{"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_pytest_context_validation", "type": "Function", "lineno": 43}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_contract_compliance_logger_integration", "type": "Function", "lineno": 65}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_non_pytest_execution_detection", "type": "Function", "lineno": 90}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_pytest_log_validation", "type": "Function", "lineno": 117}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_contract_violation_logging", "type": "Function", "lineno": 150}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_compliance_report_generation", "type": "Function", "lineno": 175}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_digital_signature_verification", "type": "Function", "lineno": 193}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_blockchain_hash_generation", "type": "Function", "lineno": 214}, {"nodeid": "test_pytest_compliance.py::TestPytestCompliance::test_timestamp_proof_generation", "type": "Function", "lineno": 232}]}, {"nodeid": "test_pytest_compliance.py::TestPytestOnlyPolicy", "outcome": "passed", "result": [{"nodeid": "test_pytest_compliance.py::TestPytestOnlyPolicy::test_pytest_only_enforcement", "type": "Function", "lineno": 252}, {"nodeid": "test_pytest_compliance.py::TestPytestOnlyPolicy::test_manual_log_rejection", "type": "Function", "lineno": 269}]}, {"nodeid": "test_pytest_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_pytest_compliance.py::TestPytestCompliance", "type": "Class"}, {"nodeid": "test_pytest_compliance.py::TestPytestOnlyPolicy", "type": "Class"}]}, {"nodeid": "test_repair_system_compliance.py::TestRepairSystemCompliance", "outcome": "passed", "result": [{"nodeid": "test_repair_system_compliance.py::TestRepairSystemCompliance::test_intelligent_repair_logging", "type": "Function", "lineno": 42}, {"nodeid": "test_repair_system_compliance.py::TestRepairSystemCompliance::test_data_repair_compliance", "type": "Function", "lineno": 136}, {"nodeid": "test_repair_system_compliance.py::TestRepairSystemCompliance::test_repair_workflow_audit", "type": "Function", "lineno": 189}]}, {"nodeid": "test_repair_system_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_repair_system_compliance.py::TestRepairSystemCompliance", "type": "Class"}]}, {"nodeid": "test_reports", "outcome": "passed", "result": []}, {"nodeid": "test_scaffold_optimization.py", "outcome": "passed", "result": []}, {"nodeid": "test_suite/cloud_data_pipeline_test.py", "outcome": "passed", "result": []}, {"nodeid": "test_suite/pc28_data_flow_test.py", "outcome": "passed", "result": []}, {"nodeid": "test_suite", "outcome": "passed", "result": [{"nodeid": "test_suite/cloud_data_pipeline_test.py", "type": "Module"}, {"nodeid": "test_suite/pc28_data_flow_test.py", "type": "Module"}]}, {"nodeid": "test_suite_manager.py", "outcome": "passed", "result": []}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance", "outcome": "passed", "result": [{"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_supabase_config_initialization", "type": "Function", "lineno": 39}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_environment_variable_validation", "type": "Function", "lineno": 70}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_config_validation_methods", "type": "Function", "lineno": 100}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_config_security_compliance", "type": "Function", "lineno": 133}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_config_connection_testing", "type": "Function", "lineno": 164}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_config_error_handling", "type": "Function", "lineno": 203}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_config_performance_metrics", "type": "Function", "lineno": 242}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_config_logging_compliance", "type": "Function", "lineno": 275}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_config_integration_readiness", "type": "Function", "lineno": 309}, {"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance::test_compliance_report_generation", "type": "Function", "lineno": 345}]}, {"nodeid": "test_supabase_config_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_supabase_config_compliance.py::TestSupabaseConfigCompliance", "type": "Class"}]}, {"nodeid": "test_supabase_sync.py", "outcome": "passed", "result": []}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance", "outcome": "passed", "result": [{"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_report_directory_structure", "type": "Function", "lineno": 50}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_markdown_report_generation", "type": "Function", "lineno": 77}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_json_report_generation", "type": "Function", "lineno": 151}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_execution_log_generation", "type": "Function", "lineno": 243}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_task_summary_generation", "type": "Function", "lineno": 352}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_report_data_integrity", "type": "Function", "lineno": 497}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_report_timestamp_consistency", "type": "Function", "lineno": 555}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_report_file_encoding", "type": "Function", "lineno": 619}, {"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance::test_compliance_report_generation", "type": "Function", "lineno": 691}]}, {"nodeid": "test_sync_reports_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_sync_reports_compliance.py::TestSyncReportsCompliance", "type": "Class"}]}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance", "outcome": "passed", "result": [{"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_core_table_creation", "type": "Function", "lineno": 50}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_table_structure_validation", "type": "Function", "lineno": 136}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_index_creation_compliance", "type": "Function", "lineno": 186}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_data_type_compliance", "type": "Function", "lineno": 228}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_constraint_enforcement", "type": "Function", "lineno": 288}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_migration_compatibility", "type": "Function", "lineno": 356}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_performance_optimization", "type": "Function", "lineno": 412}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_error_recovery_mechanisms", "type": "Function", "lineno": 473}, {"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance::test_compliance_report_generation", "type": "Function", "lineno": 539}]}, {"nodeid": "test_table_creation_compliance.py", "outcome": "passed", "result": [{"nodeid": "test_table_creation_compliance.py::TestTableCreationCompliance", "type": "Class"}]}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem", "outcome": "passed", "result": [{"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_fetch_latest_data_method_exists", "type": "Function", "lineno": 47}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_fetch_historical_data_method_exists", "type": "Function", "lineno": 52}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_cloud_data_functionality", "type": "Function", "lineno": 58}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_enhanced_data_flow_system_initialization", "type": "Function", "lineno": 63}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_smart_realtime_optimizer_initialization", "type": "Function", "lineno": 68}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_data_flow_system_database_tables", "type": "Function", "lineno": 75}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_data_flow_system_start", "type": "Function", "lineno": 90}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_data_collection_methods_exist", "type": "Function", "lineno": 111}, {"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem::test_performance_monitoring_setup", "type": "Function", "lineno": 130}]}, {"nodeid": "tests/test_data_flow_system.py", "outcome": "passed", "result": [{"nodeid": "tests/test_data_flow_system.py::TestDataFlowSystem", "type": "Class"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/test_data_flow_system.py", "type": "Module"}]}, {"nodeid": "tools", "outcome": "passed", "result": []}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "CHANGESETS", "type": "Dir"}, {"nodeid": "backups", "type": "Dir"}, {"nodeid": "bin", "type": "Dir"}, {"nodeid": "cache", "type": "Dir"}, {"nodeid": "config", "type": "Dir"}, {"nodeid": "contract_keys", "type": "Dir"}, {"nodeid": "data", "type": "Dir"}, {"nodeid": "field_archives", "type": "Dir"}, {"nodeid": "htmlcov", "type": "Dir"}, {"nodeid": "htmlcov_final", "type": "Dir"}, {"nodeid": "local_data", "type": "Dir"}, {"nodeid": "local_system", "type": "Dir"}, {"nodeid": "logs", "type": "Dir"}, {"nodeid": "monitoring", "type": "Dir"}, {"nodeid": "optimization_backups", "type": "Dir"}, {"nodeid": "pc28_business_logic_tests", "type": "Dir"}, {"nodeid": "pc28_comprehensive_business_test.py", "type": "Module"}, {"nodeid": "performance_comparison_test.py", "type": "Module"}, {"nodeid": "production_data", "type": "Dir"}, {"nodeid": "production_logs", "type": "Dir"}, {"nodeid": "pytest_execution_reports", "type": "Dir"}, {"nodeid": "python", "type": "Dir"}, {"nodeid": "receipts", "type": "Dir"}, {"nodeid": "reports", "type": "Dir"}, {"nodeid": "rollback", "type": "Dir"}, {"nodeid": "simple_supabase_test.py", "type": "Module"}, {"nodeid": "sql", "type": "Dir"}, {"nodeid": "static", "type": "Dir"}, {"nodeid": "supabase", "type": "Dir"}, {"nodeid": "sync_reports", "type": "Dir"}, {"nodeid": "test_api.py", "type": "Module"}, {"nodeid": "test_api_compliance.py", "type": "Module"}, {"nodeid": "test_api_connection.py", "type": "Module"}, {"nodeid": "test_bigquery_full_repair.py", "type": "Module"}, {"nodeid": "test_data_quality_system.py", "type": "Module"}, {"nodeid": "test_data_sync.py", "type": "Module"}, {"nodeid": "test_data_sync_compliance.py", "type": "Module"}, {"nodeid": "test_data_sync_system_compliance.py", "type": "Module"}, {"nodeid": "test_database_compliance.py", "type": "Module"}, {"nodeid": "test_database_optimizer.py", "type": "Module"}, {"nodeid": "test_e2e.py", "type": "Module"}, {"nodeid": "test_e2e_system.py", "type": "Module"}, {"nodeid": "test_field_usage_analysis.py", "type": "Module"}, {"nodeid": "test_migration_generator.py", "type": "Module"}, {"nodeid": "test_monitoring_compliance.py", "type": "Module"}, {"nodeid": "test_monitoring_system.py", "type": "Module"}, {"nodeid": "test_ops_system.py", "type": "Module"}, {"nodeid": "test_optimizer.py", "type": "Module"}, {"nodeid": "test_pc28_system.py", "type": "Module"}, {"nodeid": "test_performance_optimizer.py", "type": "Module"}, {"nodeid": "test_pytest_compliance.py", "type": "Module"}, {"nodeid": "test_repair_system_compliance.py", "type": "Module"}, {"nodeid": "test_reports", "type": "Dir"}, {"nodeid": "test_scaffold_optimization.py", "type": "Module"}, {"nodeid": "test_suite", "type": "Dir"}, {"nodeid": "test_suite_manager.py", "type": "Module"}, {"nodeid": "test_supabase_config_compliance.py", "type": "Module"}, {"nodeid": "test_supabase_sync.py", "type": "Module"}, {"nodeid": "test_sync_reports_compliance.py", "type": "Module"}, {"nodeid": "test_table_creation_compliance.py", "type": "Module"}, {"nodeid": "tests", "type": "Package"}, {"nodeid": "tools", "type": "Dir"}]}], "tests": [], "warnings": [{"message": "The 'timeout' parameter is deprecated. Please configure it in the http client instead.", "category": "DeprecationWarning", "when": "collect", "filename": "/Users/a606/Documents/9999/deploy_package/venv/lib/python3.13/site-packages/supabase/_sync/client.py", "lineno": 303}, {"message": "The 'verify' parameter is deprecated. Please configure it in the http client instead.", "category": "DeprecationWarning", "when": "collect", "filename": "/Users/a606/Documents/9999/deploy_package/venv/lib/python3.13/site-packages/supabase/_sync/client.py", "lineno": 303}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 81}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 89}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 108}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 126}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 150}, {"message": "Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 167}, {"message": "Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 181}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 242}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 258}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 285}, {"message": "Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 306}, {"message": "Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 336}, {"message": "Unknown pytest.mark.consistency - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 350}, {"message": "Unknown pytest.mark.integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 375}, {"message": "Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 424}, {"message": "Unknown pytest.mark.realtime - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/sync_reports/task_20250929_092438_realtime_optimization/test_realtime_optimization.py", "lineno": 452}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_api_compliance.py", "lineno": 43}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_api_compliance.py", "lineno": 119}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_api_compliance.py", "lineno": 172}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_bigquery_full_repair.py", "lineno": 110}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_bigquery_full_repair.py", "lineno": 134}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_bigquery_full_repair.py", "lineno": 174}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_bigquery_full_repair.py", "lineno": 210}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_bigquery_full_repair.py", "lineno": 264}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_bigquery_full_repair.py", "lineno": 316}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_compliance.py", "lineno": 44}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_compliance.py", "lineno": 107}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_compliance.py", "lineno": 161}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 112}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 149}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 182}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 225}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 258}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 293}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 328}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 357}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_data_sync_system_compliance.py", "lineno": 396}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_database_compliance.py", "lineno": 43}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_database_compliance.py", "lineno": 119}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_database_compliance.py", "lineno": 172}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_monitoring_compliance.py", "lineno": 43}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_monitoring_compliance.py", "lineno": 120}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_monitoring_compliance.py", "lineno": 173}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 44}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 66}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 91}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 118}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 151}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 176}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 194}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 215}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 233}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 253}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_pytest_compliance.py", "lineno": 270}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_repair_system_compliance.py", "lineno": 43}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_repair_system_compliance.py", "lineno": 137}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_repair_system_compliance.py", "lineno": 190}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 40}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 71}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 101}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 134}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 165}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 204}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 243}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 276}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 310}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_supabase_config_compliance.py", "lineno": 346}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 51}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 78}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 152}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 244}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 353}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 498}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 556}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 620}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_sync_reports_compliance.py", "lineno": 692}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 51}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 137}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 187}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 229}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 289}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 357}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 413}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 474}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/test_table_creation_compliance.py", "lineno": 540}, {"message": "Unknown pytest.mark.pytest_compliant - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "/Users/a606/cloud_function_source/conftest.py", "lineno": 72}]}